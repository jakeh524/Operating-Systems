CS 111 Practice Midterm

1. Page Replacement -> Faults
	Least Recently Used - 
	First in First Out - fair but not efficient
	Clock Algorithm - 
	Random	 - BAD
	Optimal - remove page needed furthest away in the future (cannot be implemented)
	Least Frequently Used - close to optimal (lots of overhead)

If your algorithm is bad then your program will run very slow because there are a lot of page faults now that your data isn't in memory so you have to go to disk more often which is a lot slower to access than memory so your program will be slow.

3. 

4. The new process has a different PID. This is useful to differentiate between the two processes (the parent and the child). You can write different code for the parent and for the child by having a condition for the PID. You can also use kill(pid, sig) to send a signal to that process. 

5. Turnaround time = time of completion - time scheduled/arrival
	Shortest job to completion = preemptive SJF
	Round Robin
	Shortest job first - ok with assumption that all processes arrive at the same time (not true)
	
Shortest job to completion would minimize the average turnaround time because it will always choose the job that will complete the fastest. It will also interrupt slow jobs with fast jobs meaning more short jobs are being completed which will drive the average turnaround time down.

6.
Paging 
-> No external fragmentation
-> Internal fragmentation will go down when you decrease the page size
Page replacement algorithm takes longer with small pages.
Switch pages more often because each has less data.
More page faults.

7. 
Shared Memory: 
	- OS used for setup, not after
	- processes can read/write at will
Sockets/Pipes:
	- used through syscalls
	- requires the OS regains control
	- flow control:
		-- ensuring direction of data
		-- ensuring no data is lost

8. ABI is relationship between binaries, the OS, and the ISA. 
Given OS and architecture:
 - I know how to specify binary
 - can distribute binary to all users with same OS and ISA

9. Virtualization
 - process sees a fixed address (virtual)
 - with virtualization you only need to update the translation after relocation
